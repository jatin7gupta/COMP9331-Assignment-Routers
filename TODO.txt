Server
-receive the requests and update a global object which can be accessed by the client to send data
-var in global


Client
check that who to send the data, and send it to all children expect him.
 send 2 packets, one for my data  and one for received data

1. dont send the parent's data to parent, if you have received his data implemented

2. Restricting link broadcast: implemented

3. When I will implement 2nd part, I will have to make sure if I delete the router from the memory of all, I should also delete previously sent messages. (add_previous_sent)


dont send to forwarder ALI
dont send the original router DONE
dont send to common neighbours DONE
dont send the forwarder neighbour and original router neighbour
dont send message again and again - sequence no

first
	all routers check for all routers in its global table that timestamp is new!! (every 3 second for neighbour and every 13 seconds of the non neighbours
second
	if someone's timestamp is old
		if check if it is my neighibour
			if my neigibour then remove it from my lsa and remove it from my global topology
				remove it as one router and also remove it from the neighbours of others

		else:
			remove it from my global topology
			remove it as one router and also remove it from the neighbours of others

also if someone declares if it is my neighbour and it is not in my neighbour list, add it